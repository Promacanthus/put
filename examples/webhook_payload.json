{
    "data": {
        "id": 122966270,
        "slug": "km7srylsgub9gp8i",
        "title": "just-test",
        "book_id": 35280332,
        "book": {
            "id": 35280332,
            "type": "Book",
            "slug": "gduwlu",
            "name": "Effective-Go",
            "user_id": 362867,
            "description": null,
            "creator_id": 362867,
            "public": 0,
            "items_count": 29,
            "likes_count": 0,
            "watches_count": 0,
            "content_updated_at": "2023-04-24T11:41:34.940Z",
            "updated_at": "2023-04-24T11:41:35.000Z",
            "created_at": "2022-11-29T02:22:57.000Z",
            "user": null,
            "_serializer": "v2.book"
        },
        "user_id": 362867,
        "user": {
            "id": 362867,
            "type": "User",
            "login": "shiguoyi",
            "name": "狮锅艺",
            "description": "",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/362867/1583373291920-avatar/fdcc9061-55de-458a-afe6-50ca6e57eb30.png",
            "books_count": 8,
            "public_books_count": 1,
            "followers_count": 0,
            "following_count": 0,
            "created_at": "2019-05-30T04:01:42.000Z",
            "updated_at": "2023-04-24T11:40:59.000Z",
            "_serializer": "v2.user"
        },
        "format": "lake",
        "body": "允许在不重新创建 Pod 或重新启动容器的情况下改变资源，可以直接解决这个问题。此外，**原地 Pod 垂直伸缩**功能依赖于容器运行时接口（CRI）来更新 Pod 容器的 CPU 和/或内存的 **requests/limits**。<br />当前的 CRI API 有一些需要解决的缺点：\n\n- UpdateContainerResources CRI API 需要一个参数来描述要为 Linux 容器更新的容器资源，这在未来可能无法适用于 Windows 容器或其他潜在的非 Linux 运行时。\n- 没有 CRI 机制可以让 Kubelet 从容器运行时查询和发现容器上配置的 CPU 和内存限制。\n- 处理 UpdateContainerResources CRI API 的运行时的预期行为没有很好地定义或记录。\n<a name=\"DehNE\"></a>\n### 目标\n\n- 主要：允许更改容器的资源请求（requests）和限制（limits），而不必重新启动容器。\n- 次要：允许参与者（用户、VPA、StatefulSet、JobController）决定在无法进行原地资源调整的情况下如何进行。\n- 次要：允许用户指定哪些容器可以在不重启的情况下调整资源大小。\n",
        "body_draft": "允许在不重新创建 Pod 或重新启动容器的情况下改变资源，可以直接解决这个问题。此外，**原地 Pod 垂直伸缩**功能依赖于容器运行时接口（CRI）来更新 Pod 容器的 CPU 和/或内存的 **requests/limits**。<br />当前的 CRI API 有一些需要解决的缺点：\n\n- UpdateContainerResources CRI API 需要一个参数来描述要为 Linux 容器更新的容器资源，这在未来可能无法适用于 Windows 容器或其他潜在的非 Linux 运行时。\n- 没有 CRI 机制可以让 Kubelet 从容器运行时查询和发现容器上配置的 CPU 和内存限制。\n- 处理 UpdateContainerResources CRI API 的运行时的预期行为没有很好地定义或记录。\n<a name=\"DehNE\"></a>\n### 目标\n\n- 主要：允许更改容器的资源请求（requests）和限制（limits），而不必重新启动容器。\n- 次要：允许参与者（用户、VPA、StatefulSet、JobController）决定在无法进行原地资源调整的情况下如何进行。\n- 次要：允许用户指定哪些容器可以在不重启的情况下调整资源大小。\n",
        "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><p id=\"uefa2acc0\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(74, 74, 74)\">允许在不重新创建 Pod 或重新启动容器的情况下改变资源，可以直接解决这个问题。此外，</span><strong><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(50, 109, 229)\">原地 Pod 垂直伸缩</span></strong><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(74, 74, 74)\">功能依赖于容器运行时接口（CRI）来更新 Pod 容器的 CPU 和/或内存的</span><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(74, 74, 74)\"> </span><strong><span class=\"ne-text\" style=\"font-size: 14px; color: rgb(50, 109, 229)\">requests/limits</span></strong><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(74, 74, 74)\">。</span></p><p id=\"u951af8fd\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(74, 74, 74)\">当前的 CRI API 有一些需要解决的缺点：</span></p><ul class=\"ne-ul\"><li id=\"uf74c7700\" data-lake-index-type=\"0\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(1, 1, 1)\">UpdateContainerResources CRI API 需要一个参数来描述要为 Linux 容器更新的容器资源，这在未来可能无法适用于 Windows 容器或其他潜在的非 Linux 运行时。</span></li><li id=\"u4c595643\" data-lake-index-type=\"0\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(1, 1, 1)\">没有 CRI 机制可以让 Kubelet 从容器运行时查询和发现容器上配置的 CPU 和内存限制。</span></li><li id=\"u7e7eca27\" data-lake-index-type=\"0\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(1, 1, 1)\">处理 UpdateContainerResources CRI API 的运行时的预期行为没有很好地定义或记录。</span></li></ul><h3 id=\"DehNE\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(50, 109, 229)\">目标</span></h3><ul class=\"ne-ul\"><li id=\"ue8d1daeb\" data-lake-index-type=\"0\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(1, 1, 1)\">主要：允许更改容器的资源请求（requests）和限制（limits），而不必重新启动容器。</span></li><li id=\"u725666ba\" data-lake-index-type=\"0\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(1, 1, 1)\">次要：允许参与者（用户、VPA、StatefulSet、JobController）决定在无法进行原地资源调整的情况下如何进行。</span></li><li id=\"uacd8fae9\" data-lake-index-type=\"0\" style=\"text-align: left\"><span class=\"ne-text\" style=\"font-size: 16px; color: rgb(1, 1, 1)\">次要：允许用户指定哪些容器可以在不重启的情况下调整资源大小。</span></li></ul></div>",
        "public": 0,
        "status": 1,
        "view_status": 0,
        "read_status": 1,
        "likes_count": 0,
        "comments_count": 0,
        "content_updated_at": "2023-04-24T11:41:35.000Z",
        "deleted_at": null,
        "created_at": "2023-04-24T11:36:31.000Z",
        "updated_at": "2023-04-24T11:41:35.000Z",
        "published_at": "2023-04-24T11:41:35.000Z",
        "first_published_at": "2023-04-24T11:36:46.938Z",
        "word_count": 308,
        "_serializer": "webhook.doc_detail",
        "path": "shiguoyi/gduwlu/km7srylsgub9gp8i",
        "publish": false,
        "action_type": "update",
        "webhook_subject_type": "update",
        "actor_id": 362867,
        "actor": {
            "id": 362867,
            "type": "User",
            "login": "shiguoyi",
            "name": "狮锅艺",
            "avatar": "https://cdn.nlark.com/yuque/0/2020/png/362867/1583373291920-avatar/fdcc9061-55de-458a-afe6-50ca6e57eb30.png",
            "scene": null,
            "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/362867/1583373291920-avatar/fdcc9061-55de-458a-afe6-50ca6e57eb30.png",
            "role": 1,
            "isPaid": true,
            "member_level": 1,
            "followers_count": 0,
            "following_count": 0,
            "description": "",
            "status": 1,
            "expired_at": "2024-04-24T15:59:59.000Z",
            "_serializer": "web.user_lite"
        }
    }
}